# Generated by Django 5.2.4 on 2025-08-01 16:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0003_balances'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10)),
                ('execution_type', models.CharField(choices=[('limit', 'Limit'), ('market', 'Market')], default='limit', max_length=10)),
                ('price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('remaining_quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('locked_funds', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('executed', 'Executed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_orders', to='backend.currency')),
                ('quote_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_orders', to='backend.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee_buyer', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('fee_seller', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('traded_at', models.DateTimeField(auto_now_add=True)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_trades', to='backend.currency')),
                ('buy_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buy_trades', to='backend.order')),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buy_trades', to=settings.AUTH_USER_MODEL)),
                ('quote_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_trades', to='backend.currency')),
                ('sell_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sell_trades', to='backend.order')),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sell_trades', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('source', models.TextField(blank=True, null=True)),
                ('destination', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maker_fee', models.DecimalField(decimal_places=4, max_digits=5)),
                ('taker_fee', models.DecimalField(decimal_places=4, max_digits=5)),
                ('active', models.BooleanField(default=True)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charges_base', to='backend.currency')),
                ('quote_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charges_quote', to='backend.currency')),
            ],
            options={
                'unique_together': {('base_currency', 'quote_currency')},
            },
        ),
        migrations.CreateModel(
            name='LastTradedPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ltp_base', to='backend.currency')),
                ('quote_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ltp_quote', to='backend.currency')),
            ],
            options={
                'unique_together': {('base_currency', 'quote_currency')},
            },
        ),
    ]
